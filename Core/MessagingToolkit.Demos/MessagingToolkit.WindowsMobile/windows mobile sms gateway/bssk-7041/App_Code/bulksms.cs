//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bulksms {
  using System;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.Reflection;
  using System.Query;
  using System.Expressions;
  using System.Data;
  using System.Data.DLinq;
  
  
  [System.Data.DLinq.DatabaseAttribute(Name="bulksms")]
  public partial class Bulksms : DataContext {
    
    public Table<Error> Errors;
    
    public Table<Sysdiagram> Sysdiagrams;
    
    public Table<MsgHistory> MsgHistories;
    
    public Table<SenderId> SenderIds;
    
    public Table<Country> Countries;
    
    public Table<Operator> Operators;
    
    public Table<MsgOutbox> MsgOutboxes;
    
    public Table<MsgMain> MsgMains;
    
    public Table<MsgTemplates> MsgTemplates;
    
    public Table<PointHistory> PointHistories;
    
    public Table<New> News;
    
    public Table<Payment> Payments;
    
    public Table<MsgDetail> MsgDetails;
    
    public Table<GrpMain> GrpMains;
    
    public Table<Prices> Prices;
    
    public Table<GrpDetail> GrpDetails;
    
    public Table<Setting> Settings;
    
    public Table<PriorityGroup> PriorityGroups;
    
    public Table<User> Users;
    
    public Table<Support> Supports;
    
    public Table<Admin> Admins;
    
    public Bulksms(string connection) : 
        base(connection) {
    }
    
    public Bulksms(System.Data.IDbConnection connection) : 
        base(connection) {
    }
    
    public Bulksms(string connection, System.Data.DLinq.MappingSource mappingSource) : 
        base(connection, mappingSource) {
    }
    
    public Bulksms(System.Data.IDbConnection connection, System.Data.DLinq.MappingSource mappingSource) : 
        base(connection, mappingSource) {
    }
  }
  
  [Table(Name="errors")]
  public partial class Error : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Id;
    
    private string _Username;
    
    private System.DateTime _Date;
    
    private int _Num;
    
    private string _Msg;
    
    private string _File;
    
    private string _Line;
    
    public Error() {
    }
    
    [Column(Name="id", Storage="_Id", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int Id {
      get {
        return this._Id;
      }
      set {
        if ((this._Id != value)) {
          this.OnPropertyChanging("Id");
          this._Id = value;
          this.OnPropertyChanged("Id");
        }
      }
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(15) NOT NULL")]
    [DataObjectField(false, false, false, 15)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="date", Storage="_Date", DBType="DateTime NOT NULL")]
    [DataObjectField(false, false, false)]
    public System.DateTime Date {
      get {
        return this._Date;
      }
      set {
        if ((this._Date != value)) {
          this.OnPropertyChanging("Date");
          this._Date = value;
          this.OnPropertyChanged("Date");
        }
      }
    }
    
    [Column(Name="num", Storage="_Num", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Num {
      get {
        return this._Num;
      }
      set {
        if ((this._Num != value)) {
          this.OnPropertyChanging("Num");
          this._Num = value;
          this.OnPropertyChanged("Num");
        }
      }
    }
    
    [Column(Name="msg", Storage="_Msg", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Msg {
      get {
        return this._Msg;
      }
      set {
        if ((this._Msg != value)) {
          this.OnPropertyChanging("Msg");
          this._Msg = value;
          this.OnPropertyChanged("Msg");
        }
      }
    }
    
    [Column(Name="file", Storage="_File", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string File {
      get {
        return this._File;
      }
      set {
        if ((this._File != value)) {
          this.OnPropertyChanging("File");
          this._File = value;
          this.OnPropertyChanged("File");
        }
      }
    }
    
    [Column(Name="line", Storage="_Line", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Line {
      get {
        return this._Line;
      }
      set {
        if ((this._Line != value)) {
          this.OnPropertyChanging("Line");
          this._Line = value;
          this.OnPropertyChanged("Line");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="sysdiagrams")]
  public partial class Sysdiagram : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Name;
    
    private int _PrincipalId;
    
    private int _DiagramId;
    
    private System.Nullable<int> _Version;
    
    private byte[] _Definition;
    
    public Sysdiagram() {
    }
    
    [Column(Name="name", Storage="_Name", DBType="NVarChar(128) NOT NULL")]
    [DataObjectField(false, false, false, 128)]
    public string Name {
      get {
        return this._Name;
      }
      set {
        if ((this._Name != value)) {
          this.OnPropertyChanging("Name");
          this._Name = value;
          this.OnPropertyChanged("Name");
        }
      }
    }
    
    [Column(Name="principal_id", Storage="_PrincipalId", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int PrincipalId {
      get {
        return this._PrincipalId;
      }
      set {
        if ((this._PrincipalId != value)) {
          this.OnPropertyChanging("PrincipalId");
          this._PrincipalId = value;
          this.OnPropertyChanged("PrincipalId");
        }
      }
    }
    
    [Column(Name="diagram_id", Storage="_DiagramId", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int DiagramId {
      get {
        return this._DiagramId;
      }
      set {
        if ((this._DiagramId != value)) {
          this.OnPropertyChanging("DiagramId");
          this._DiagramId = value;
          this.OnPropertyChanged("DiagramId");
        }
      }
    }
    
    [Column(Name="version", Storage="_Version", DBType="Int")]
    [DataObjectField(false, false, true)]
    [Precision(Precision=10, Scale=255)]
    public System.Nullable<int> Version {
      get {
        return this._Version;
      }
      set {
        if ((this._Version != value)) {
          this.OnPropertyChanging("Version");
          this._Version = value;
          this.OnPropertyChanged("Version");
        }
      }
    }
    
    [Column(Name="definition", Storage="_Definition", DBType="VarBinary(2147483647)", UpdateCheck=System.Data.DLinq.UpdateCheck.Never)]
    [DataObjectField(false, false, false)]
    public byte[] Definition {
      get {
        return this._Definition;
      }
      set {
        if ((this._Definition != value)) {
          this.OnPropertyChanging("Definition");
          this._Definition = value;
          this.OnPropertyChanged("Definition");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="msg_history")]
  public partial class MsgHistory : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Username;
    
    private int _Msgid;
    
    private int _Groupid;
    
    private int _Total;
    
    private string _Hide;
    
    private string _Statusid;
    
    private int _MsgHistoryId;
    
    private EntityRef<GrpMain> _GrpMain;
    
    private EntityRef<MsgMain> _MsgMain;
    
    private EntityRef<User> _User;
    
    public MsgHistory() {
      this._GrpMain = default(EntityRef<GrpMain>);
      this._MsgMain = default(EntityRef<MsgMain>);
      this._User = default(EntityRef<User>);
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="msgid", Storage="_Msgid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Msgid {
      get {
        return this._Msgid;
      }
      set {
        if ((this._Msgid != value)) {
          this.OnPropertyChanging("Msgid");
          this._Msgid = value;
          this.OnPropertyChanged("Msgid");
        }
      }
    }
    
    [Column(Name="groupid", Storage="_Groupid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Groupid {
      get {
        return this._Groupid;
      }
      set {
        if ((this._Groupid != value)) {
          this.OnPropertyChanging("Groupid");
          this._Groupid = value;
          this.OnPropertyChanged("Groupid");
        }
      }
    }
    
    [Column(Name="total", Storage="_Total", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Total {
      get {
        return this._Total;
      }
      set {
        if ((this._Total != value)) {
          this.OnPropertyChanging("Total");
          this._Total = value;
          this.OnPropertyChanged("Total");
        }
      }
    }
    
    [Column(Name="hide", Storage="_Hide", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Hide {
      get {
        return this._Hide;
      }
      set {
        if ((this._Hide != value)) {
          this.OnPropertyChanging("Hide");
          this._Hide = value;
          this.OnPropertyChanged("Hide");
        }
      }
    }
    
    [Column(Name="statusid", Storage="_Statusid", DBType="Char(2) NOT NULL")]
    [DataObjectField(false, false, false, 2)]
    public string Statusid {
      get {
        return this._Statusid;
      }
      set {
        if ((this._Statusid != value)) {
          this.OnPropertyChanging("Statusid");
          this._Statusid = value;
          this.OnPropertyChanged("Statusid");
        }
      }
    }
    
    [Column(Name="msg_history_id", Storage="_MsgHistoryId", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int MsgHistoryId {
      get {
        return this._MsgHistoryId;
      }
      set {
        if ((this._MsgHistoryId != value)) {
          this.OnPropertyChanging("MsgHistoryId");
          this._MsgHistoryId = value;
          this.OnPropertyChanged("MsgHistoryId");
        }
      }
    }
    
    [Association(Name="FK_msg_history_grp_main", Storage="_GrpMain", ThisKey="Groupid", IsParent=true)]
    public GrpMain GrpMain {
      get {
        return this._GrpMain.Entity;
      }
      set {
        GrpMain v = this._GrpMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("GrpMain");
          if ((v != null)) {
            this._GrpMain.Entity = null;
            v.MsgHistories.Remove(this);
          }
          this._GrpMain.Entity = value;
          if ((value != null)) {
            value.MsgHistories.Add(this);
          }
          this.OnPropertyChanged("GrpMain");
        }
      }
    }
    
    [Association(Name="FK_msg_history_msg_main", Storage="_MsgMain", ThisKey="Msgid", IsParent=true)]
    public MsgMain MsgMain {
      get {
        return this._MsgMain.Entity;
      }
      set {
        MsgMain v = this._MsgMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("MsgMain");
          if ((v != null)) {
            this._MsgMain.Entity = null;
            v.MsgHistories.Remove(this);
          }
          this._MsgMain.Entity = value;
          if ((value != null)) {
            value.MsgHistories.Add(this);
          }
          this.OnPropertyChanged("MsgMain");
        }
      }
    }
    
    [Association(Name="FK_msg_history_users", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.MsgHistories.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.MsgHistories.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="sender_id")]
  public partial class SenderId : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private decimal _Tableid;
    
    private string _Username;
    
    private string _Senderid;
    
    private EntitySet<MsgMain> _MsgMains;
    
    private EntityRef<User> _User;
    
    public SenderId() {
      this._MsgMains = new EntitySet<MsgMain>(new Notification<MsgMain>(this.attach_MsgMains), new Notification<MsgMain>(this.detach_MsgMains));
      this._User = default(EntityRef<User>);
    }
    
    [Column(Name="tableid", Storage="_Tableid", DBType="Decimal(18,0) NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=18, Scale=0)]
    public decimal Tableid {
      get {
        return this._Tableid;
      }
      set {
        if ((this._Tableid != value)) {
          this.OnPropertyChanging("Tableid");
          this._Tableid = value;
          this.OnPropertyChanged("Tableid");
        }
      }
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50)")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="senderid", Storage="_Senderid", DBType="VarChar(50)")]
    [DataObjectField(false, false, false, 50)]
    public string Senderid {
      get {
        return this._Senderid;
      }
      set {
        if ((this._Senderid != value)) {
          this.OnPropertyChanging("Senderid");
          this._Senderid = value;
          this.OnPropertyChanged("Senderid");
        }
      }
    }
    
    [Association(Name="FK_msg_main_sender_id", Storage="_MsgMains", OtherKey="Sender")]
    public EntitySet<MsgMain> MsgMains {
      get {
        return this._MsgMains;
      }
      set {
        this._MsgMains.Assign(value);
      }
    }
    
    [Association(Name="FK_sender_id_sender_id", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.SenderIds.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.SenderIds.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_MsgMains(MsgMain entity) {
      this.OnPropertyChanging(null);
      entity.SenderId = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgMains(MsgMain entity) {
      this.OnPropertyChanging(null);
      entity.SenderId = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="countries")]
  public partial class Country : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Code;
    
    private string _Content;
    
    private EntitySet<Operator> _Operators;
    
    public Country() {
      this._Operators = new EntitySet<Operator>(new Notification<Operator>(this.attach_Operators), new Notification<Operator>(this.detach_Operators));
    }
    
    [Column(Name="code", Storage="_Code", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Code {
      get {
        return this._Code;
      }
      set {
        if ((this._Code != value)) {
          this.OnPropertyChanging("Code");
          this._Code = value;
          this.OnPropertyChanged("Code");
        }
      }
    }
    
    [Column(Name="country", Storage="_Content", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Content {
      get {
        return this._Content;
      }
      set {
        if ((this._Content != value)) {
          this.OnPropertyChanging("Content");
          this._Content = value;
          this.OnPropertyChanged("Content");
        }
      }
    }
    
    [Association(Name="FK_Operators_countries", Storage="_Operators", OtherKey="Code")]
    public EntitySet<Operator> Operators {
      get {
        return this._Operators;
      }
      set {
        this._Operators.Assign(value);
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_Operators(Operator entity) {
      this.OnPropertyChanging(null);
      entity.Country = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_Operators(Operator entity) {
      this.OnPropertyChanging(null);
      entity.Country = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="Operators")]
  public partial class Operator : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _OpCode;
    
    private System.Nullable<int> _Code;
    
    private string _OpName;
    
    private EntityRef<Country> _Country;
    
    private EntitySet<Prices> _Prices;
    
    public Operator() {
      this._Country = default(EntityRef<Country>);
      this._Prices = new EntitySet<Prices>(new Notification<Prices>(this.attach_Prices), new Notification<Prices>(this.detach_Prices));
    }
    
    [Column(Name="op_code", Storage="_OpCode", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int OpCode {
      get {
        return this._OpCode;
      }
      set {
        if ((this._OpCode != value)) {
          this.OnPropertyChanging("OpCode");
          this._OpCode = value;
          this.OnPropertyChanged("OpCode");
        }
      }
    }
    
    [Column(Name="code", Storage="_Code", DBType="Int")]
    [DataObjectField(false, false, true)]
    [Precision(Precision=10, Scale=255)]
    public System.Nullable<int> Code {
      get {
        return this._Code;
      }
      set {
        if ((this._Code != value)) {
          this.OnPropertyChanging("Code");
          this._Code = value;
          this.OnPropertyChanged("Code");
        }
      }
    }
    
    [Column(Name="op_name", Storage="_OpName", DBType="VarChar(50)")]
    [DataObjectField(false, false, false, 50)]
    public string OpName {
      get {
        return this._OpName;
      }
      set {
        if ((this._OpName != value)) {
          this.OnPropertyChanging("OpName");
          this._OpName = value;
          this.OnPropertyChanged("OpName");
        }
      }
    }
    
    [Association(Name="FK_Operators_countries", Storage="_Country", ThisKey="Code", IsParent=true)]
    public Country Country {
      get {
        return this._Country.Entity;
      }
      set {
        Country v = this._Country.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("Country");
          if ((v != null)) {
            this._Country.Entity = null;
            v.Operators.Remove(this);
          }
          this._Country.Entity = value;
          if ((value != null)) {
            value.Operators.Add(this);
          }
          this.OnPropertyChanged("Country");
        }
      }
    }
    
    [Association(Name="FK_prices_Operators", Storage="_Prices", OtherKey="Opcode")]
    public EntitySet<Prices> Prices {
      get {
        return this._Prices;
      }
      set {
        this._Prices.Assign(value);
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_Prices(Prices entity) {
      this.OnPropertyChanging(null);
      entity.Operator = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_Prices(Prices entity) {
      this.OnPropertyChanging(null);
      entity.Operator = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="msg_outbox")]
  public partial class MsgOutbox : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Mobile;
    
    private string _Username;
    
    private int _Msgid;
    
    private int _Groupid;
    
    private int _Statusid;
    
    private int _MsgOutboxId;
    
    private EntityRef<MsgMain> _MsgMain;
    
    private EntityRef<User> _User;
    
    public MsgOutbox() {
      this._MsgMain = default(EntityRef<MsgMain>);
      this._User = default(EntityRef<User>);
    }
    
    [Column(Name="mobile", Storage="_Mobile", DBType="VarChar(20) NOT NULL")]
    [DataObjectField(false, false, false, 20)]
    public string Mobile {
      get {
        return this._Mobile;
      }
      set {
        if ((this._Mobile != value)) {
          this.OnPropertyChanging("Mobile");
          this._Mobile = value;
          this.OnPropertyChanged("Mobile");
        }
      }
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="msgid", Storage="_Msgid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Msgid {
      get {
        return this._Msgid;
      }
      set {
        if ((this._Msgid != value)) {
          this.OnPropertyChanging("Msgid");
          this._Msgid = value;
          this.OnPropertyChanged("Msgid");
        }
      }
    }
    
    [Column(Name="groupid", Storage="_Groupid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Groupid {
      get {
        return this._Groupid;
      }
      set {
        if ((this._Groupid != value)) {
          this.OnPropertyChanging("Groupid");
          this._Groupid = value;
          this.OnPropertyChanged("Groupid");
        }
      }
    }
    
    [Column(Name="statusid", Storage="_Statusid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Statusid {
      get {
        return this._Statusid;
      }
      set {
        if ((this._Statusid != value)) {
          this.OnPropertyChanging("Statusid");
          this._Statusid = value;
          this.OnPropertyChanged("Statusid");
        }
      }
    }
    
    [Column(Name="msg_outbox_id", Storage="_MsgOutboxId", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int MsgOutboxId {
      get {
        return this._MsgOutboxId;
      }
      set {
        if ((this._MsgOutboxId != value)) {
          this.OnPropertyChanging("MsgOutboxId");
          this._MsgOutboxId = value;
          this.OnPropertyChanged("MsgOutboxId");
        }
      }
    }
    
    [Association(Name="FK_msg_outbox_msg_main", Storage="_MsgMain", ThisKey="Msgid", IsParent=true)]
    public MsgMain MsgMain {
      get {
        return this._MsgMain.Entity;
      }
      set {
        MsgMain v = this._MsgMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("MsgMain");
          if ((v != null)) {
            this._MsgMain.Entity = null;
            v.MsgOutboxes.Remove(this);
          }
          this._MsgMain.Entity = value;
          if ((value != null)) {
            value.MsgOutboxes.Add(this);
          }
          this.OnPropertyChanged("MsgMain");
        }
      }
    }
    
    [Association(Name="FK_msg_outbox_users", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.MsgOutboxes.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.MsgOutboxes.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="msg_main")]
  public partial class MsgMain : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Msgid;
    
    private string _Username;
    
    private string _Message;
    
    private string _Type;
    
    private decimal _Sender;
    
    private System.DateTime _Date;
    
    private EntitySet<MsgDetail> _MsgDetails;
    
    private EntitySet<MsgHistory> _MsgHistories;
    
    private EntityRef<SenderId> _SenderId;
    
    private EntityRef<User> _User;
    
    private EntitySet<MsgOutbox> _MsgOutboxes;
    
    public MsgMain() {
      this._MsgDetails = new EntitySet<MsgDetail>(new Notification<MsgDetail>(this.attach_MsgDetails), new Notification<MsgDetail>(this.detach_MsgDetails));
      this._MsgHistories = new EntitySet<MsgHistory>(new Notification<MsgHistory>(this.attach_MsgHistories), new Notification<MsgHistory>(this.detach_MsgHistories));
      this._SenderId = default(EntityRef<SenderId>);
      this._User = default(EntityRef<User>);
      this._MsgOutboxes = new EntitySet<MsgOutbox>(new Notification<MsgOutbox>(this.attach_MsgOutboxes), new Notification<MsgOutbox>(this.detach_MsgOutboxes));
    }
    
    [Column(Name="msgid", Storage="_Msgid", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Msgid {
      get {
        return this._Msgid;
      }
      set {
        if ((this._Msgid != value)) {
          this.OnPropertyChanging("Msgid");
          this._Msgid = value;
          this.OnPropertyChanged("Msgid");
        }
      }
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="message", Storage="_Message", DBType="VarChar(160) NOT NULL")]
    [DataObjectField(false, false, false, 160)]
    public string Message {
      get {
        return this._Message;
      }
      set {
        if ((this._Message != value)) {
          this.OnPropertyChanging("Message");
          this._Message = value;
          this.OnPropertyChanged("Message");
        }
      }
    }
    
    [Column(Name="type", Storage="_Type", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Type {
      get {
        return this._Type;
      }
      set {
        if ((this._Type != value)) {
          this.OnPropertyChanging("Type");
          this._Type = value;
          this.OnPropertyChanged("Type");
        }
      }
    }
    
    [Column(Name="sender", Storage="_Sender", DBType="Decimal(18,0) NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=18, Scale=0)]
    public decimal Sender {
      get {
        return this._Sender;
      }
      set {
        if ((this._Sender != value)) {
          this.OnPropertyChanging("Sender");
          this._Sender = value;
          this.OnPropertyChanged("Sender");
        }
      }
    }
    
    [Column(Name="date", Storage="_Date", DBType="DateTime NOT NULL")]
    [DataObjectField(false, false, false)]
    public System.DateTime Date {
      get {
        return this._Date;
      }
      set {
        if ((this._Date != value)) {
          this.OnPropertyChanging("Date");
          this._Date = value;
          this.OnPropertyChanged("Date");
        }
      }
    }
    
    [Association(Name="FK_msg_detail_msg_main", Storage="_MsgDetails", OtherKey="Msgid")]
    public EntitySet<MsgDetail> MsgDetails {
      get {
        return this._MsgDetails;
      }
      set {
        this._MsgDetails.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_history_msg_main", Storage="_MsgHistories", OtherKey="Msgid")]
    public EntitySet<MsgHistory> MsgHistories {
      get {
        return this._MsgHistories;
      }
      set {
        this._MsgHistories.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_main_sender_id", Storage="_SenderId", ThisKey="Sender", IsParent=true)]
    public SenderId SenderId {
      get {
        return this._SenderId.Entity;
      }
      set {
        SenderId v = this._SenderId.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("SenderId");
          if ((v != null)) {
            this._SenderId.Entity = null;
            v.MsgMains.Remove(this);
          }
          this._SenderId.Entity = value;
          if ((value != null)) {
            value.MsgMains.Add(this);
          }
          this.OnPropertyChanged("SenderId");
        }
      }
    }
    
    [Association(Name="FK_msg_main_users", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.MsgMains.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.MsgMains.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    [Association(Name="FK_msg_outbox_msg_main", Storage="_MsgOutboxes", OtherKey="Msgid")]
    public EntitySet<MsgOutbox> MsgOutboxes {
      get {
        return this._MsgOutboxes;
      }
      set {
        this._MsgOutboxes.Assign(value);
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_MsgDetails(MsgDetail entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgDetails(MsgDetail entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgOutboxes(MsgOutbox entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgOutboxes(MsgOutbox entity) {
      this.OnPropertyChanging(null);
      entity.MsgMain = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="msg_templates")]
  public partial class MsgTemplates : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Tempid;
    
    private string _Userid;
    
    private string _Template;
    
    private string _MobileColumn;
    
    private string _Type;
    
    public MsgTemplates() {
    }
    
    [Column(Name="tempid", Storage="_Tempid", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Tempid {
      get {
        return this._Tempid;
      }
      set {
        if ((this._Tempid != value)) {
          this.OnPropertyChanging("Tempid");
          this._Tempid = value;
          this.OnPropertyChanged("Tempid");
        }
      }
    }
    
    [Column(Name="userid", Storage="_Userid", DBType="VarChar(25) NOT NULL")]
    [DataObjectField(false, false, false, 25)]
    public string Userid {
      get {
        return this._Userid;
      }
      set {
        if ((this._Userid != value)) {
          this.OnPropertyChanging("Userid");
          this._Userid = value;
          this.OnPropertyChanged("Userid");
        }
      }
    }
    
    [Column(Name="template", Storage="_Template", DBType="VarChar(160) NOT NULL")]
    [DataObjectField(false, false, false, 160)]
    public string Template {
      get {
        return this._Template;
      }
      set {
        if ((this._Template != value)) {
          this.OnPropertyChanging("Template");
          this._Template = value;
          this.OnPropertyChanged("Template");
        }
      }
    }
    
    [Column(Name="mobile_column", Storage="_MobileColumn", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string MobileColumn {
      get {
        return this._MobileColumn;
      }
      set {
        if ((this._MobileColumn != value)) {
          this.OnPropertyChanging("MobileColumn");
          this._MobileColumn = value;
          this.OnPropertyChanged("MobileColumn");
        }
      }
    }
    
    [Column(Name="type", Storage="_Type", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Type {
      get {
        return this._Type;
      }
      set {
        if ((this._Type != value)) {
          this.OnPropertyChanging("Type");
          this._Type = value;
          this.OnPropertyChanged("Type");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="point_history")]
  public partial class PointHistory : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Username;
    
    private System.Nullable<System.DateTime> _Date;
    
    private System.Nullable<decimal> _Debit;
    
    private System.Nullable<decimal> _Credit;
    
    private string _Details;
    
    private int _PointHistoryId;
    
    private EntityRef<User> _User;
    
    public PointHistory() {
      this._User = default(EntityRef<User>);
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50)")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="date", Storage="_Date", DBType="DateTime")]
    [DataObjectField(false, false, true)]
    public System.Nullable<System.DateTime> Date {
      get {
        return this._Date;
      }
      set {
        if ((this._Date != value)) {
          this.OnPropertyChanging("Date");
          this._Date = value;
          this.OnPropertyChanged("Date");
        }
      }
    }
    
    [Column(Name="debit", Storage="_Debit", DBType="Decimal(18,0)")]
    [DataObjectField(false, false, true)]
    [Precision(Precision=18, Scale=0)]
    public System.Nullable<decimal> Debit {
      get {
        return this._Debit;
      }
      set {
        if ((this._Debit != value)) {
          this.OnPropertyChanging("Debit");
          this._Debit = value;
          this.OnPropertyChanged("Debit");
        }
      }
    }
    
    [Column(Name="credit", Storage="_Credit", DBType="Decimal(18,0)")]
    [DataObjectField(false, false, true)]
    [Precision(Precision=18, Scale=0)]
    public System.Nullable<decimal> Credit {
      get {
        return this._Credit;
      }
      set {
        if ((this._Credit != value)) {
          this.OnPropertyChanging("Credit");
          this._Credit = value;
          this.OnPropertyChanged("Credit");
        }
      }
    }
    
    [Column(Name="details", Storage="_Details", DBType="VarChar(250)")]
    [DataObjectField(false, false, false, 250)]
    public string Details {
      get {
        return this._Details;
      }
      set {
        if ((this._Details != value)) {
          this.OnPropertyChanging("Details");
          this._Details = value;
          this.OnPropertyChanged("Details");
        }
      }
    }
    
    [Column(Name="point_history_id", Storage="_PointHistoryId", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int PointHistoryId {
      get {
        return this._PointHistoryId;
      }
      set {
        if ((this._PointHistoryId != value)) {
          this.OnPropertyChanging("PointHistoryId");
          this._PointHistoryId = value;
          this.OnPropertyChanged("PointHistoryId");
        }
      }
    }
    
    [Association(Name="FK_point_history_users", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.PointHistories.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.PointHistories.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="news")]
  public partial class New : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _NewsId;
    
    private string _Title;
    
    private string _News;
    
    private System.DateTime _NewsDate;
    
    public New() {
    }
    
    [Column(Name="news_id", Storage="_NewsId", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int NewsId {
      get {
        return this._NewsId;
      }
      set {
        if ((this._NewsId != value)) {
          this.OnPropertyChanging("NewsId");
          this._NewsId = value;
          this.OnPropertyChanged("NewsId");
        }
      }
    }
    
    [Column(Name="title", Storage="_Title", DBType="VarChar(150) NOT NULL")]
    [DataObjectField(false, false, false, 150)]
    public string Title {
      get {
        return this._Title;
      }
      set {
        if ((this._Title != value)) {
          this.OnPropertyChanging("Title");
          this._Title = value;
          this.OnPropertyChanged("Title");
        }
      }
    }
    
    [Column(Name="news", Storage="_News", DBType="Text NOT NULL", UpdateCheck=System.Data.DLinq.UpdateCheck.Never)]
    [DataObjectField(false, false, false, 2147483647)]
    public string News {
      get {
        return this._News;
      }
      set {
        if ((this._News != value)) {
          this.OnPropertyChanging("News");
          this._News = value;
          this.OnPropertyChanged("News");
        }
      }
    }
    
    [Column(Name="news_date", Storage="_NewsDate", DBType="DateTime NOT NULL")]
    [DataObjectField(false, false, false)]
    public System.DateTime NewsDate {
      get {
        return this._NewsDate;
      }
      set {
        if ((this._NewsDate != value)) {
          this.OnPropertyChanging("NewsDate");
          this._NewsDate = value;
          this.OnPropertyChanged("NewsDate");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="payment")]
  public partial class Payment : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _PaymentID;
    
    private string _ResultCode;
    
    private string _AuthCode;
    
    private string _TranID;
    
    private string _PostDate;
    
    private string _TrackID;
    
    private string _Udf2;
    
    private int _CurrentTime;
    
    public Payment() {
    }
    
    [Column(Storage="_PaymentID", DBType="VarChar(255) NOT NULL", Id=true)]
    [DataObjectField(true, false, false, 255)]
    public string PaymentID {
      get {
        return this._PaymentID;
      }
      set {
        if ((this._PaymentID != value)) {
          this.OnPropertyChanging("PaymentID");
          this._PaymentID = value;
          this.OnPropertyChanged("PaymentID");
        }
      }
    }
    
    [Column(Storage="_ResultCode", DBType="VarChar(255) NOT NULL")]
    [DataObjectField(false, false, false, 255)]
    public string ResultCode {
      get {
        return this._ResultCode;
      }
      set {
        if ((this._ResultCode != value)) {
          this.OnPropertyChanging("ResultCode");
          this._ResultCode = value;
          this.OnPropertyChanged("ResultCode");
        }
      }
    }
    
    [Column(Storage="_AuthCode", DBType="VarChar(255) NOT NULL")]
    [DataObjectField(false, false, false, 255)]
    public string AuthCode {
      get {
        return this._AuthCode;
      }
      set {
        if ((this._AuthCode != value)) {
          this.OnPropertyChanging("AuthCode");
          this._AuthCode = value;
          this.OnPropertyChanged("AuthCode");
        }
      }
    }
    
    [Column(Storage="_TranID", DBType="VarChar(255) NOT NULL")]
    [DataObjectField(false, false, false, 255)]
    public string TranID {
      get {
        return this._TranID;
      }
      set {
        if ((this._TranID != value)) {
          this.OnPropertyChanging("TranID");
          this._TranID = value;
          this.OnPropertyChanged("TranID");
        }
      }
    }
    
    [Column(Storage="_PostDate", DBType="VarChar(255) NOT NULL")]
    [DataObjectField(false, false, false, 255)]
    public string PostDate {
      get {
        return this._PostDate;
      }
      set {
        if ((this._PostDate != value)) {
          this.OnPropertyChanging("PostDate");
          this._PostDate = value;
          this.OnPropertyChanged("PostDate");
        }
      }
    }
    
    [Column(Storage="_TrackID", DBType="VarChar(255) NOT NULL")]
    [DataObjectField(false, false, false, 255)]
    public string TrackID {
      get {
        return this._TrackID;
      }
      set {
        if ((this._TrackID != value)) {
          this.OnPropertyChanging("TrackID");
          this._TrackID = value;
          this.OnPropertyChanged("TrackID");
        }
      }
    }
    
    [Column(Storage="_Udf2", DBType="VarChar(6) NOT NULL")]
    [DataObjectField(false, false, false, 6)]
    public string Udf2 {
      get {
        return this._Udf2;
      }
      set {
        if ((this._Udf2 != value)) {
          this.OnPropertyChanging("Udf2");
          this._Udf2 = value;
          this.OnPropertyChanged("Udf2");
        }
      }
    }
    
    [Column(Storage="_CurrentTime", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int CurrentTime {
      get {
        return this._CurrentTime;
      }
      set {
        if ((this._CurrentTime != value)) {
          this.OnPropertyChanging("CurrentTime");
          this._CurrentTime = value;
          this.OnPropertyChanged("CurrentTime");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="msg_detail")]
  public partial class MsgDetail : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Mobile;
    
    private int _Groupid;
    
    private int _Msgid;
    
    private string _Hide;
    
    private int _MsgDetailId;
    
    private EntityRef<GrpMain> _GrpMain;
    
    private EntityRef<MsgMain> _MsgMain;
    
    public MsgDetail() {
      this._GrpMain = default(EntityRef<GrpMain>);
      this._MsgMain = default(EntityRef<MsgMain>);
    }
    
    [Column(Name="mobile", Storage="_Mobile", DBType="VarChar(20) NOT NULL")]
    [DataObjectField(false, false, false, 20)]
    public string Mobile {
      get {
        return this._Mobile;
      }
      set {
        if ((this._Mobile != value)) {
          this.OnPropertyChanging("Mobile");
          this._Mobile = value;
          this.OnPropertyChanged("Mobile");
        }
      }
    }
    
    [Column(Name="groupid", Storage="_Groupid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Groupid {
      get {
        return this._Groupid;
      }
      set {
        if ((this._Groupid != value)) {
          this.OnPropertyChanging("Groupid");
          this._Groupid = value;
          this.OnPropertyChanged("Groupid");
        }
      }
    }
    
    [Column(Name="msgid", Storage="_Msgid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Msgid {
      get {
        return this._Msgid;
      }
      set {
        if ((this._Msgid != value)) {
          this.OnPropertyChanging("Msgid");
          this._Msgid = value;
          this.OnPropertyChanged("Msgid");
        }
      }
    }
    
    [Column(Name="hide", Storage="_Hide", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Hide {
      get {
        return this._Hide;
      }
      set {
        if ((this._Hide != value)) {
          this.OnPropertyChanging("Hide");
          this._Hide = value;
          this.OnPropertyChanged("Hide");
        }
      }
    }
    
    [Column(Name="msg_detail_id", Storage="_MsgDetailId", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int MsgDetailId {
      get {
        return this._MsgDetailId;
      }
      set {
        if ((this._MsgDetailId != value)) {
          this.OnPropertyChanging("MsgDetailId");
          this._MsgDetailId = value;
          this.OnPropertyChanged("MsgDetailId");
        }
      }
    }
    
    [Association(Name="FK_msg_detail_grp_main", Storage="_GrpMain", ThisKey="Groupid", IsParent=true)]
    public GrpMain GrpMain {
      get {
        return this._GrpMain.Entity;
      }
      set {
        GrpMain v = this._GrpMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("GrpMain");
          if ((v != null)) {
            this._GrpMain.Entity = null;
            v.MsgDetails.Remove(this);
          }
          this._GrpMain.Entity = value;
          if ((value != null)) {
            value.MsgDetails.Add(this);
          }
          this.OnPropertyChanged("GrpMain");
        }
      }
    }
    
    [Association(Name="FK_msg_detail_msg_main", Storage="_MsgMain", ThisKey="Msgid", IsParent=true)]
    public MsgMain MsgMain {
      get {
        return this._MsgMain.Entity;
      }
      set {
        MsgMain v = this._MsgMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("MsgMain");
          if ((v != null)) {
            this._MsgMain.Entity = null;
            v.MsgDetails.Remove(this);
          }
          this._MsgMain.Entity = value;
          if ((value != null)) {
            value.MsgDetails.Add(this);
          }
          this.OnPropertyChanged("MsgMain");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="grp_main")]
  public partial class GrpMain : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Username;
    
    private int _Groupid;
    
    private string _Groupname;
    
    private string _Detail;
    
    private int _Grouporder;
    
    private EntitySet<GrpDetail> _GrpDetails;
    
    private EntityRef<User> _User;
    
    private EntitySet<MsgDetail> _MsgDetails;
    
    private EntitySet<MsgHistory> _MsgHistories;
    
    public GrpMain() {
      this._GrpDetails = new EntitySet<GrpDetail>(new Notification<GrpDetail>(this.attach_GrpDetails), new Notification<GrpDetail>(this.detach_GrpDetails));
      this._User = default(EntityRef<User>);
      this._MsgDetails = new EntitySet<MsgDetail>(new Notification<MsgDetail>(this.attach_MsgDetails), new Notification<MsgDetail>(this.detach_MsgDetails));
      this._MsgHistories = new EntitySet<MsgHistory>(new Notification<MsgHistory>(this.attach_MsgHistories), new Notification<MsgHistory>(this.detach_MsgHistories));
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="groupid", Storage="_Groupid", DBType="Int NOT NULL", Id=true)]
    [DataObjectField(true, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Groupid {
      get {
        return this._Groupid;
      }
      set {
        if ((this._Groupid != value)) {
          this.OnPropertyChanging("Groupid");
          this._Groupid = value;
          this.OnPropertyChanged("Groupid");
        }
      }
    }
    
    [Column(Name="groupname", Storage="_Groupname", DBType="VarChar(60) NOT NULL")]
    [DataObjectField(false, false, false, 60)]
    public string Groupname {
      get {
        return this._Groupname;
      }
      set {
        if ((this._Groupname != value)) {
          this.OnPropertyChanging("Groupname");
          this._Groupname = value;
          this.OnPropertyChanged("Groupname");
        }
      }
    }
    
    [Column(Name="detail", Storage="_Detail", DBType="VarChar(200) NOT NULL")]
    [DataObjectField(false, false, false, 200)]
    public string Detail {
      get {
        return this._Detail;
      }
      set {
        if ((this._Detail != value)) {
          this.OnPropertyChanging("Detail");
          this._Detail = value;
          this.OnPropertyChanged("Detail");
        }
      }
    }
    
    [Column(Name="grouporder", Storage="_Grouporder", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Grouporder {
      get {
        return this._Grouporder;
      }
      set {
        if ((this._Grouporder != value)) {
          this.OnPropertyChanging("Grouporder");
          this._Grouporder = value;
          this.OnPropertyChanged("Grouporder");
        }
      }
    }
    
    [Association(Name="FK_grp_detail_grp_detail", Storage="_GrpDetails", OtherKey="Groupid")]
    public EntitySet<GrpDetail> GrpDetails {
      get {
        return this._GrpDetails;
      }
      set {
        this._GrpDetails.Assign(value);
      }
    }
    
    [Association(Name="FK_grp_main_users", Storage="_User", ThisKey="Username", IsParent=true)]
    public User User {
      get {
        return this._User.Entity;
      }
      set {
        User v = this._User.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("User");
          if ((v != null)) {
            this._User.Entity = null;
            v.GrpMains.Remove(this);
          }
          this._User.Entity = value;
          if ((value != null)) {
            value.GrpMains.Add(this);
          }
          this.OnPropertyChanged("User");
        }
      }
    }
    
    [Association(Name="FK_msg_detail_grp_main", Storage="_MsgDetails", OtherKey="Groupid")]
    public EntitySet<MsgDetail> MsgDetails {
      get {
        return this._MsgDetails;
      }
      set {
        this._MsgDetails.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_history_grp_main", Storage="_MsgHistories", OtherKey="Groupid")]
    public EntitySet<MsgHistory> MsgHistories {
      get {
        return this._MsgHistories;
      }
      set {
        this._MsgHistories.Assign(value);
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_GrpDetails(GrpDetail entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_GrpDetails(GrpDetail entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgDetails(MsgDetail entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgDetails(MsgDetail entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.GrpMain = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="prices")]
  public partial class Prices : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Opcode;
    
    private decimal _Price;
    
    private EntityRef<Operator> _Operator;
    
    public Prices() {
      this._Operator = default(EntityRef<Operator>);
    }
    
    [Column(Name="opcode", Storage="_Opcode", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Opcode {
      get {
        return this._Opcode;
      }
      set {
        if ((this._Opcode != value)) {
          this.OnPropertyChanging("Opcode");
          this._Opcode = value;
          this.OnPropertyChanged("Opcode");
        }
      }
    }
    
    [Column(Name="price", Storage="_Price", DBType="Decimal(3,1) NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=3, Scale=1)]
    public decimal Price {
      get {
        return this._Price;
      }
      set {
        if ((this._Price != value)) {
          this.OnPropertyChanging("Price");
          this._Price = value;
          this.OnPropertyChanged("Price");
        }
      }
    }
    
    [Association(Name="FK_prices_Operators", Storage="_Operator", ThisKey="Opcode", IsParent=true)]
    public Operator Operator {
      get {
        return this._Operator.Entity;
      }
      set {
        Operator v = this._Operator.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("Operator");
          if ((v != null)) {
            this._Operator.Entity = null;
            v.Prices.Remove(this);
          }
          this._Operator.Entity = value;
          if ((value != null)) {
            value.Prices.Add(this);
          }
          this.OnPropertyChanged("Operator");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="grp_detail")]
  public partial class GrpDetail : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Groupid;
    
    private string _Mobile;
    
    private string _Name;
    
    private string _Detail;
    
    private string _Picked;
    
    private decimal _GrpDetailId;
    
    private EntityRef<GrpMain> _GrpMain;
    
    public GrpDetail() {
      this._GrpMain = default(EntityRef<GrpMain>);
    }
    
    [Column(Name="groupid", Storage="_Groupid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Groupid {
      get {
        return this._Groupid;
      }
      set {
        if ((this._Groupid != value)) {
          this.OnPropertyChanging("Groupid");
          this._Groupid = value;
          this.OnPropertyChanged("Groupid");
        }
      }
    }
    
    [Column(Name="mobile", Storage="_Mobile", DBType="VarChar(20) NOT NULL")]
    [DataObjectField(false, false, false, 20)]
    public string Mobile {
      get {
        return this._Mobile;
      }
      set {
        if ((this._Mobile != value)) {
          this.OnPropertyChanging("Mobile");
          this._Mobile = value;
          this.OnPropertyChanged("Mobile");
        }
      }
    }
    
    [Column(Name="name", Storage="_Name", DBType="VarChar(60) NOT NULL")]
    [DataObjectField(false, false, false, 60)]
    public string Name {
      get {
        return this._Name;
      }
      set {
        if ((this._Name != value)) {
          this.OnPropertyChanging("Name");
          this._Name = value;
          this.OnPropertyChanged("Name");
        }
      }
    }
    
    [Column(Name="detail", Storage="_Detail", DBType="VarChar(240) NOT NULL")]
    [DataObjectField(false, false, false, 240)]
    public string Detail {
      get {
        return this._Detail;
      }
      set {
        if ((this._Detail != value)) {
          this.OnPropertyChanging("Detail");
          this._Detail = value;
          this.OnPropertyChanged("Detail");
        }
      }
    }
    
    [Column(Name="picked", Storage="_Picked", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Picked {
      get {
        return this._Picked;
      }
      set {
        if ((this._Picked != value)) {
          this.OnPropertyChanging("Picked");
          this._Picked = value;
          this.OnPropertyChanged("Picked");
        }
      }
    }
    
    [Column(Name="grp_detail_id", Storage="_GrpDetailId", DBType="Decimal(18,0) NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=18, Scale=0)]
    public decimal GrpDetailId {
      get {
        return this._GrpDetailId;
      }
      set {
        if ((this._GrpDetailId != value)) {
          this.OnPropertyChanging("GrpDetailId");
          this._GrpDetailId = value;
          this.OnPropertyChanged("GrpDetailId");
        }
      }
    }
    
    [Association(Name="FK_grp_detail_grp_detail", Storage="_GrpMain", ThisKey="Groupid", IsParent=true)]
    public GrpMain GrpMain {
      get {
        return this._GrpMain.Entity;
      }
      set {
        GrpMain v = this._GrpMain.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("GrpMain");
          if ((v != null)) {
            this._GrpMain.Entity = null;
            v.GrpDetails.Remove(this);
          }
          this._GrpMain.Entity = value;
          if ((value != null)) {
            value.GrpDetails.Add(this);
          }
          this.OnPropertyChanged("GrpMain");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="settings")]
  public partial class Setting : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Freepoints;
    
    private int _Expirydays;
    
    private int _Siteactive;
    
    private string _Sitemsg;
    
    private int _Useractive;
    
    private string _Usermsg;
    
    private string _Sending;
    
    private string _Sendmsg;
    
    private int _TimeDifference;
    
    private int _Counter;
    
    private string _Payment;
    
    public Setting() {
    }
    
    [Column(Name="freepoints", Storage="_Freepoints", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Freepoints {
      get {
        return this._Freepoints;
      }
      set {
        if ((this._Freepoints != value)) {
          this.OnPropertyChanging("Freepoints");
          this._Freepoints = value;
          this.OnPropertyChanged("Freepoints");
        }
      }
    }
    
    [Column(Name="expirydays", Storage="_Expirydays", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Expirydays {
      get {
        return this._Expirydays;
      }
      set {
        if ((this._Expirydays != value)) {
          this.OnPropertyChanging("Expirydays");
          this._Expirydays = value;
          this.OnPropertyChanged("Expirydays");
        }
      }
    }
    
    [Column(Name="siteactive", Storage="_Siteactive", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Siteactive {
      get {
        return this._Siteactive;
      }
      set {
        if ((this._Siteactive != value)) {
          this.OnPropertyChanging("Siteactive");
          this._Siteactive = value;
          this.OnPropertyChanged("Siteactive");
        }
      }
    }
    
    [Column(Name="sitemsg", Storage="_Sitemsg", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Sitemsg {
      get {
        return this._Sitemsg;
      }
      set {
        if ((this._Sitemsg != value)) {
          this.OnPropertyChanging("Sitemsg");
          this._Sitemsg = value;
          this.OnPropertyChanged("Sitemsg");
        }
      }
    }
    
    [Column(Name="useractive", Storage="_Useractive", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Useractive {
      get {
        return this._Useractive;
      }
      set {
        if ((this._Useractive != value)) {
          this.OnPropertyChanging("Useractive");
          this._Useractive = value;
          this.OnPropertyChanged("Useractive");
        }
      }
    }
    
    [Column(Name="usermsg", Storage="_Usermsg", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Usermsg {
      get {
        return this._Usermsg;
      }
      set {
        if ((this._Usermsg != value)) {
          this.OnPropertyChanging("Usermsg");
          this._Usermsg = value;
          this.OnPropertyChanged("Usermsg");
        }
      }
    }
    
    [Column(Name="sending", Storage="_Sending", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Sending {
      get {
        return this._Sending;
      }
      set {
        if ((this._Sending != value)) {
          this.OnPropertyChanging("Sending");
          this._Sending = value;
          this.OnPropertyChanged("Sending");
        }
      }
    }
    
    [Column(Name="sendmsg", Storage="_Sendmsg", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Sendmsg {
      get {
        return this._Sendmsg;
      }
      set {
        if ((this._Sendmsg != value)) {
          this.OnPropertyChanging("Sendmsg");
          this._Sendmsg = value;
          this.OnPropertyChanged("Sendmsg");
        }
      }
    }
    
    [Column(Name="time_difference", Storage="_TimeDifference", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int TimeDifference {
      get {
        return this._TimeDifference;
      }
      set {
        if ((this._TimeDifference != value)) {
          this.OnPropertyChanging("TimeDifference");
          this._TimeDifference = value;
          this.OnPropertyChanged("TimeDifference");
        }
      }
    }
    
    [Column(Name="counter", Storage="_Counter", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Counter {
      get {
        return this._Counter;
      }
      set {
        if ((this._Counter != value)) {
          this.OnPropertyChanging("Counter");
          this._Counter = value;
          this.OnPropertyChanged("Counter");
        }
      }
    }
    
    [Column(Name="payment", Storage="_Payment", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Payment {
      get {
        return this._Payment;
      }
      set {
        if ((this._Payment != value)) {
          this.OnPropertyChanging("Payment");
          this._Payment = value;
          this.OnPropertyChanged("Payment");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="priority_group")]
  public partial class PriorityGroup : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _GroupName;
    
    private int _PriorityGroupId;
    
    private EntitySet<User> _Users;
    
    public PriorityGroup() {
      this._Users = new EntitySet<User>(new Notification<User>(this.attach_Users), new Notification<User>(this.detach_Users));
    }
    
    [Column(Name="group_name", Storage="_GroupName", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string GroupName {
      get {
        return this._GroupName;
      }
      set {
        if ((this._GroupName != value)) {
          this.OnPropertyChanging("GroupName");
          this._GroupName = value;
          this.OnPropertyChanged("GroupName");
        }
      }
    }
    
    [Column(Name="priority_group_id", Storage="_PriorityGroupId", DBType="Int NOT NULL IDENTITY", Id=true, AutoGen=true)]
    [DataObjectField(true, true, false)]
    [Precision(Precision=10, Scale=255)]
    public int PriorityGroupId {
      get {
        return this._PriorityGroupId;
      }
      set {
        if ((this._PriorityGroupId != value)) {
          this.OnPropertyChanging("PriorityGroupId");
          this._PriorityGroupId = value;
          this.OnPropertyChanged("PriorityGroupId");
        }
      }
    }
    
    [Association(Name="FK_users_priority_group", Storage="_Users", OtherKey="ProorityGroup")]
    public EntitySet<User> Users {
      get {
        return this._Users;
      }
      set {
        this._Users.Assign(value);
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_Users(User entity) {
      this.OnPropertyChanging(null);
      entity.PriorityGroup = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_Users(User entity) {
      this.OnPropertyChanging(null);
      entity.PriorityGroup = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="users")]
  public partial class User : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Username;
    
    private int _ProorityGroup;
    
    private int _Userid;
    
    private string _Name;
    
    private string _Country;
    
    private string _City;
    
    private string _Sex;
    
    private System.DateTime _Birthday;
    
    private string _Tel;
    
    private string _Mobileno;
    
    private string _Mobileno2;
    
    private string _Fax;
    
    private string _Email;
    
    private string _Website;
    
    private string _Regcode;
    
    private int _Active;
    
    private decimal _Points;
    
    private int _Regdate;
    
    private string _Passcode;
    
    private int _Lastvisit;
    
    private int _Expirydate;
    
    private string _Company;
    
    private decimal _Timezone;
    
    private EntitySet<GrpMain> _GrpMains;
    
    private EntitySet<MsgHistory> _MsgHistories;
    
    private EntitySet<MsgMain> _MsgMains;
    
    private EntitySet<MsgOutbox> _MsgOutboxes;
    
    private EntitySet<PointHistory> _PointHistories;
    
    private EntitySet<SenderId> _SenderIds;
    
    private EntityRef<PriorityGroup> _PriorityGroup;
    
    public User() {
      this._GrpMains = new EntitySet<GrpMain>(new Notification<GrpMain>(this.attach_GrpMains), new Notification<GrpMain>(this.detach_GrpMains));
      this._MsgHistories = new EntitySet<MsgHistory>(new Notification<MsgHistory>(this.attach_MsgHistories), new Notification<MsgHistory>(this.detach_MsgHistories));
      this._MsgMains = new EntitySet<MsgMain>(new Notification<MsgMain>(this.attach_MsgMains), new Notification<MsgMain>(this.detach_MsgMains));
      this._MsgOutboxes = new EntitySet<MsgOutbox>(new Notification<MsgOutbox>(this.attach_MsgOutboxes), new Notification<MsgOutbox>(this.detach_MsgOutboxes));
      this._PointHistories = new EntitySet<PointHistory>(new Notification<PointHistory>(this.attach_PointHistories), new Notification<PointHistory>(this.detach_PointHistories));
      this._SenderIds = new EntitySet<SenderId>(new Notification<SenderId>(this.attach_SenderIds), new Notification<SenderId>(this.detach_SenderIds));
      this._PriorityGroup = default(EntityRef<PriorityGroup>);
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(50) NOT NULL", Id=true)]
    [DataObjectField(true, false, false, 50)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="proority_group", Storage="_ProorityGroup", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int ProorityGroup {
      get {
        return this._ProorityGroup;
      }
      set {
        if ((this._ProorityGroup != value)) {
          this.OnPropertyChanging("ProorityGroup");
          this._ProorityGroup = value;
          this.OnPropertyChanged("ProorityGroup");
        }
      }
    }
    
    [Column(Name="userid", Storage="_Userid", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Userid {
      get {
        return this._Userid;
      }
      set {
        if ((this._Userid != value)) {
          this.OnPropertyChanging("Userid");
          this._Userid = value;
          this.OnPropertyChanged("Userid");
        }
      }
    }
    
    [Column(Name="name", Storage="_Name", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Name {
      get {
        return this._Name;
      }
      set {
        if ((this._Name != value)) {
          this.OnPropertyChanging("Name");
          this._Name = value;
          this.OnPropertyChanged("Name");
        }
      }
    }
    
    [Column(Name="country", Storage="_Country", DBType="VarChar(10) NOT NULL")]
    [DataObjectField(false, false, false, 10)]
    public string Country {
      get {
        return this._Country;
      }
      set {
        if ((this._Country != value)) {
          this.OnPropertyChanging("Country");
          this._Country = value;
          this.OnPropertyChanged("Country");
        }
      }
    }
    
    [Column(Name="city", Storage="_City", DBType="VarChar(30) NOT NULL")]
    [DataObjectField(false, false, false, 30)]
    public string City {
      get {
        return this._City;
      }
      set {
        if ((this._City != value)) {
          this.OnPropertyChanging("City");
          this._City = value;
          this.OnPropertyChanged("City");
        }
      }
    }
    
    [Column(Name="sex", Storage="_Sex", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Sex {
      get {
        return this._Sex;
      }
      set {
        if ((this._Sex != value)) {
          this.OnPropertyChanging("Sex");
          this._Sex = value;
          this.OnPropertyChanged("Sex");
        }
      }
    }
    
    [Column(Name="birthday", Storage="_Birthday", DBType="DateTime NOT NULL")]
    [DataObjectField(false, false, false)]
    public System.DateTime Birthday {
      get {
        return this._Birthday;
      }
      set {
        if ((this._Birthday != value)) {
          this.OnPropertyChanging("Birthday");
          this._Birthday = value;
          this.OnPropertyChanged("Birthday");
        }
      }
    }
    
    [Column(Name="tel", Storage="_Tel", DBType="VarChar(15) NOT NULL")]
    [DataObjectField(false, false, false, 15)]
    public string Tel {
      get {
        return this._Tel;
      }
      set {
        if ((this._Tel != value)) {
          this.OnPropertyChanging("Tel");
          this._Tel = value;
          this.OnPropertyChanged("Tel");
        }
      }
    }
    
    [Column(Name="mobileno", Storage="_Mobileno", DBType="VarChar(15) NOT NULL")]
    [DataObjectField(false, false, false, 15)]
    public string Mobileno {
      get {
        return this._Mobileno;
      }
      set {
        if ((this._Mobileno != value)) {
          this.OnPropertyChanging("Mobileno");
          this._Mobileno = value;
          this.OnPropertyChanged("Mobileno");
        }
      }
    }
    
    [Column(Name="mobileno2", Storage="_Mobileno2", DBType="VarChar(15) NOT NULL")]
    [DataObjectField(false, false, false, 15)]
    public string Mobileno2 {
      get {
        return this._Mobileno2;
      }
      set {
        if ((this._Mobileno2 != value)) {
          this.OnPropertyChanging("Mobileno2");
          this._Mobileno2 = value;
          this.OnPropertyChanged("Mobileno2");
        }
      }
    }
    
    [Column(Name="fax", Storage="_Fax", DBType="VarChar(15) NOT NULL")]
    [DataObjectField(false, false, false, 15)]
    public string Fax {
      get {
        return this._Fax;
      }
      set {
        if ((this._Fax != value)) {
          this.OnPropertyChanging("Fax");
          this._Fax = value;
          this.OnPropertyChanged("Fax");
        }
      }
    }
    
    [Column(Name="email", Storage="_Email", DBType="VarChar(50) NOT NULL")]
    [DataObjectField(false, false, false, 50)]
    public string Email {
      get {
        return this._Email;
      }
      set {
        if ((this._Email != value)) {
          this.OnPropertyChanging("Email");
          this._Email = value;
          this.OnPropertyChanged("Email");
        }
      }
    }
    
    [Column(Name="website", Storage="_Website", DBType="VarChar(250) NOT NULL")]
    [DataObjectField(false, false, false, 250)]
    public string Website {
      get {
        return this._Website;
      }
      set {
        if ((this._Website != value)) {
          this.OnPropertyChanging("Website");
          this._Website = value;
          this.OnPropertyChanged("Website");
        }
      }
    }
    
    [Column(Name="regcode", Storage="_Regcode", DBType="VarChar(10) NOT NULL")]
    [DataObjectField(false, false, false, 10)]
    public string Regcode {
      get {
        return this._Regcode;
      }
      set {
        if ((this._Regcode != value)) {
          this.OnPropertyChanging("Regcode");
          this._Regcode = value;
          this.OnPropertyChanged("Regcode");
        }
      }
    }
    
    [Column(Name="active", Storage="_Active", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Active {
      get {
        return this._Active;
      }
      set {
        if ((this._Active != value)) {
          this.OnPropertyChanging("Active");
          this._Active = value;
          this.OnPropertyChanged("Active");
        }
      }
    }
    
    [Column(Name="points", Storage="_Points", DBType="Decimal(10,1) NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=1)]
    public decimal Points {
      get {
        return this._Points;
      }
      set {
        if ((this._Points != value)) {
          this.OnPropertyChanging("Points");
          this._Points = value;
          this.OnPropertyChanged("Points");
        }
      }
    }
    
    [Column(Name="regdate", Storage="_Regdate", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Regdate {
      get {
        return this._Regdate;
      }
      set {
        if ((this._Regdate != value)) {
          this.OnPropertyChanging("Regdate");
          this._Regdate = value;
          this.OnPropertyChanged("Regdate");
        }
      }
    }
    
    [Column(Name="passcode", Storage="_Passcode", DBType="VarChar(10) NOT NULL")]
    [DataObjectField(false, false, false, 10)]
    public string Passcode {
      get {
        return this._Passcode;
      }
      set {
        if ((this._Passcode != value)) {
          this.OnPropertyChanging("Passcode");
          this._Passcode = value;
          this.OnPropertyChanged("Passcode");
        }
      }
    }
    
    [Column(Name="lastvisit", Storage="_Lastvisit", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Lastvisit {
      get {
        return this._Lastvisit;
      }
      set {
        if ((this._Lastvisit != value)) {
          this.OnPropertyChanging("Lastvisit");
          this._Lastvisit = value;
          this.OnPropertyChanged("Lastvisit");
        }
      }
    }
    
    [Column(Name="expirydate", Storage="_Expirydate", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Expirydate {
      get {
        return this._Expirydate;
      }
      set {
        if ((this._Expirydate != value)) {
          this.OnPropertyChanging("Expirydate");
          this._Expirydate = value;
          this.OnPropertyChanged("Expirydate");
        }
      }
    }
    
    [Column(Name="company", Storage="_Company", DBType="VarChar(100) NOT NULL")]
    [DataObjectField(false, false, false, 100)]
    public string Company {
      get {
        return this._Company;
      }
      set {
        if ((this._Company != value)) {
          this.OnPropertyChanging("Company");
          this._Company = value;
          this.OnPropertyChanged("Company");
        }
      }
    }
    
    [Column(Name="timezone", Storage="_Timezone", DBType="Decimal(3,2) NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=3, Scale=2)]
    public decimal Timezone {
      get {
        return this._Timezone;
      }
      set {
        if ((this._Timezone != value)) {
          this.OnPropertyChanging("Timezone");
          this._Timezone = value;
          this.OnPropertyChanged("Timezone");
        }
      }
    }
    
    [Association(Name="FK_grp_main_users", Storage="_GrpMains", OtherKey="Username")]
    public EntitySet<GrpMain> GrpMains {
      get {
        return this._GrpMains;
      }
      set {
        this._GrpMains.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_history_users", Storage="_MsgHistories", OtherKey="Username")]
    public EntitySet<MsgHistory> MsgHistories {
      get {
        return this._MsgHistories;
      }
      set {
        this._MsgHistories.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_main_users", Storage="_MsgMains", OtherKey="Username")]
    public EntitySet<MsgMain> MsgMains {
      get {
        return this._MsgMains;
      }
      set {
        this._MsgMains.Assign(value);
      }
    }
    
    [Association(Name="FK_msg_outbox_users", Storage="_MsgOutboxes", OtherKey="Username")]
    public EntitySet<MsgOutbox> MsgOutboxes {
      get {
        return this._MsgOutboxes;
      }
      set {
        this._MsgOutboxes.Assign(value);
      }
    }
    
    [Association(Name="FK_point_history_users", Storage="_PointHistories", OtherKey="Username")]
    public EntitySet<PointHistory> PointHistories {
      get {
        return this._PointHistories;
      }
      set {
        this._PointHistories.Assign(value);
      }
    }
    
    [Association(Name="FK_sender_id_sender_id", Storage="_SenderIds", OtherKey="Username")]
    public EntitySet<SenderId> SenderIds {
      get {
        return this._SenderIds;
      }
      set {
        this._SenderIds.Assign(value);
      }
    }
    
    [Association(Name="FK_users_priority_group", Storage="_PriorityGroup", ThisKey="ProorityGroup", IsParent=true)]
    public PriorityGroup PriorityGroup {
      get {
        return this._PriorityGroup.Entity;
      }
      set {
        PriorityGroup v = this._PriorityGroup.Entity;
        if ((v != value)) {
          this.OnPropertyChanging("PriorityGroup");
          if ((v != null)) {
            this._PriorityGroup.Entity = null;
            v.Users.Remove(this);
          }
          this._PriorityGroup.Entity = value;
          if ((value != null)) {
            value.Users.Add(this);
          }
          this.OnPropertyChanged("PriorityGroup");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    private void attach_GrpMains(GrpMain entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_GrpMains(GrpMain entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgHistories(MsgHistory entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgMains(MsgMain entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgMains(MsgMain entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_MsgOutboxes(MsgOutbox entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_MsgOutboxes(MsgOutbox entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_PointHistories(PointHistory entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_PointHistories(PointHistory entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
    
    private void attach_SenderIds(SenderId entity) {
      this.OnPropertyChanging(null);
      entity.User = this;
      this.OnPropertyChanged(null);
    }
    
    private void detach_SenderIds(SenderId entity) {
      this.OnPropertyChanging(null);
      entity.User = null;
      this.OnPropertyChanged(null);
    }
  }
  
  [Table(Name="support")]
  public partial class Support : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private int _Receiver;
    
    private int _Sender;
    
    private string _Message;
    
    private int _Date;
    
    private string _Picked;
    
    private string _Lang;
    
    public Support() {
    }
    
    [Column(Name="receiver", Storage="_Receiver", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Receiver {
      get {
        return this._Receiver;
      }
      set {
        if ((this._Receiver != value)) {
          this.OnPropertyChanging("Receiver");
          this._Receiver = value;
          this.OnPropertyChanged("Receiver");
        }
      }
    }
    
    [Column(Name="sender", Storage="_Sender", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Sender {
      get {
        return this._Sender;
      }
      set {
        if ((this._Sender != value)) {
          this.OnPropertyChanging("Sender");
          this._Sender = value;
          this.OnPropertyChanged("Sender");
        }
      }
    }
    
    [Column(Name="message", Storage="_Message", DBType="Text NOT NULL", UpdateCheck=System.Data.DLinq.UpdateCheck.Never)]
    [DataObjectField(false, false, false, 2147483647)]
    public string Message {
      get {
        return this._Message;
      }
      set {
        if ((this._Message != value)) {
          this.OnPropertyChanging("Message");
          this._Message = value;
          this.OnPropertyChanged("Message");
        }
      }
    }
    
    [Column(Name="date", Storage="_Date", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Date {
      get {
        return this._Date;
      }
      set {
        if ((this._Date != value)) {
          this.OnPropertyChanging("Date");
          this._Date = value;
          this.OnPropertyChanged("Date");
        }
      }
    }
    
    [Column(Name="picked", Storage="_Picked", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Picked {
      get {
        return this._Picked;
      }
      set {
        if ((this._Picked != value)) {
          this.OnPropertyChanging("Picked");
          this._Picked = value;
          this.OnPropertyChanged("Picked");
        }
      }
    }
    
    [Column(Name="lang", Storage="_Lang", DBType="Char(1) NOT NULL")]
    [DataObjectField(false, false, false, 1)]
    public string Lang {
      get {
        return this._Lang;
      }
      set {
        if ((this._Lang != value)) {
          this.OnPropertyChanging("Lang");
          this._Lang = value;
          this.OnPropertyChanged("Lang");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
  
  [Table(Name="admin")]
  public partial class Admin : System.Data.DLinq.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged {
    
    private string _Username;
    
    private string _Password;
    
    private int _Lastvisit;
    
    private string _Sold;
    
    public Admin() {
    }
    
    [Column(Name="username", Storage="_Username", DBType="VarChar(15) NOT NULL", Id=true)]
    [DataObjectField(true, false, false, 15)]
    public string Username {
      get {
        return this._Username;
      }
      set {
        if ((this._Username != value)) {
          this.OnPropertyChanging("Username");
          this._Username = value;
          this.OnPropertyChanged("Username");
        }
      }
    }
    
    [Column(Name="password", Storage="_Password", DBType="VarChar(32) NOT NULL")]
    [DataObjectField(false, false, false, 32)]
    public string Password {
      get {
        return this._Password;
      }
      set {
        if ((this._Password != value)) {
          this.OnPropertyChanging("Password");
          this._Password = value;
          this.OnPropertyChanged("Password");
        }
      }
    }
    
    [Column(Name="lastvisit", Storage="_Lastvisit", DBType="Int NOT NULL")]
    [DataObjectField(false, false, false)]
    [Precision(Precision=10, Scale=255)]
    public int Lastvisit {
      get {
        return this._Lastvisit;
      }
      set {
        if ((this._Lastvisit != value)) {
          this.OnPropertyChanging("Lastvisit");
          this._Lastvisit = value;
          this.OnPropertyChanged("Lastvisit");
        }
      }
    }
    
    [Column(Name="sold", Storage="_Sold", DBType="Char(2) NOT NULL")]
    [DataObjectField(false, false, false, 2)]
    public string Sold {
      get {
        return this._Sold;
      }
      set {
        if ((this._Sold != value)) {
          this.OnPropertyChanging("Sold");
          this._Sold = value;
          this.OnPropertyChanged("Sold");
        }
      }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanging;
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected virtual void OnPropertyChanging(string PropertyName) {
      if ((this.PropertyChanging != null)) {
        this.PropertyChanging(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
    
    protected virtual void OnPropertyChanged(string PropertyName) {
      if ((this.PropertyChanged != null)) {
        this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));
      }
    }
  }
}
